<?php

namespace DoctrineProxies\__CG__\App\Models;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Organization extends \App\Models\Organization implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'id', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'parentId', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'ownerId', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'owner', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'chargebeeCustomerId', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'parent', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'children', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'subscription', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'name', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'type', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'createdAt', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'locations', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'filteredLocations', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'isRestrictedByLocation'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'id', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'parentId', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'ownerId', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'owner', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'chargebeeCustomerId', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'parent', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'children', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'subscription', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'name', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'type', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'createdAt', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'locations', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'filteredLocations', '' . "\0" . 'App\\Models\\Organization' . "\0" . 'isRestrictedByLocation'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Organization $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function belongsTo(\App\Models\Organization $owner): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'belongsTo', [$owner]);

        return parent::belongsTo($owner);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwner(): \App\Models\OauthUser
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwner', []);

        return parent::getOwner();
    }

    /**
     * {@inheritDoc}
     */
    public function hasAccess(\App\Models\OauthUser $user, \App\Models\Role ...$roles): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasAccess', [$user, $roles]);

        return parent::hasAccess($user, ...$roles);
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): \Ramsey\Uuid\UuidInterface
    {
        if ($this->__isInitialized__ === false) {
            return  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getSubscription(): ?\App\Models\Billing\Organisation\Subscriptions
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSubscription', []);

        return parent::getSubscription();
    }

    /**
     * {@inheritDoc}
     */
    public function getParentOrganizationId(): ?\Ramsey\Uuid\UuidInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParentOrganizationId', []);

        return parent::getParentOrganizationId();
    }

    /**
     * {@inheritDoc}
     */
    public function getParent(): ?\App\Models\Organization
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getParent', []);

        return parent::getParent();
    }

    /**
     * {@inheritDoc}
     */
    public function getChildren(): \Doctrine\Common\Collections\Collection
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChildren', []);

        return parent::getChildren();
    }

    /**
     * {@inheritDoc}
     */
    public function getName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getName', []);

        return parent::getName();
    }

    /**
     * {@inheritDoc}
     */
    public function setName(string $name)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setName', [$name]);

        return parent::setName($name);
    }

    /**
     * {@inheritDoc}
     */
    public function getLocations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLocations', []);

        return parent::getLocations();
    }

    /**
     * {@inheritDoc}
     */
    public function getCreatedAt(): \DateTime
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCreatedAt', []);

        return parent::getCreatedAt();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsRestrictedByLocation(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsRestrictedByLocation', []);

        return parent::getIsRestrictedByLocation();
    }

    /**
     * {@inheritDoc}
     */
    public function getFilteredLocations(array $serials)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFilteredLocations', [$serials]);

        return parent::getFilteredLocations($serials);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessableLocations()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessableLocations', []);

        return parent::getAccessableLocations();
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessableSerials()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessableSerials', []);

        return parent::getAccessableSerials();
    }

    /**
     * {@inheritDoc}
     */
    public function jsonSerialize()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'jsonSerialize', []);

        return parent::jsonSerialize();
    }

    /**
     * {@inheritDoc}
     */
    public function addChild(\App\Models\Organization $child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChild', [$child]);

        return parent::addChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChild(\App\Models\Organization $child)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChild', [$child]);

        return parent::removeChild($child);
    }

    /**
     * {@inheritDoc}
     */
    public function setChildren(array $children)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChildren', [$children]);

        return parent::setChildren($children);
    }

    /**
     * {@inheritDoc}
     */
    public function setType(string $type): \App\Models\Organization
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setType', [$type]);

        return parent::setType($type);
    }

    /**
     * {@inheritDoc}
     */
    public function getType(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getType', []);

        return parent::getType();
    }

    /**
     * {@inheritDoc}
     */
    public function setParent(\App\Models\Organization $newParent): \App\Models\Organization
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setParent', [$newParent]);

        return parent::setParent($newParent);
    }

    /**
     * {@inheritDoc}
     */
    public function getOwnerId(): \Ramsey\Uuid\UuidInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOwnerId', []);

        return parent::getOwnerId();
    }

    /**
     * {@inheritDoc}
     */
    public function getChargebeeCustomerId(): ?string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChargebeeCustomerId', []);

        return parent::getChargebeeCustomerId();
    }

    /**
     * {@inheritDoc}
     */
    public function setChargebeeCustomerId(string $chargebeeCustomerId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setChargebeeCustomerId', [$chargebeeCustomerId]);

        return parent::setChargebeeCustomerId($chargebeeCustomerId);
    }

    /**
     * {@inheritDoc}
     */
    public function addLocation(\App\Models\Locations\LocationSettings $location)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addLocation', [$location]);

        return parent::addLocation($location);
    }

}
