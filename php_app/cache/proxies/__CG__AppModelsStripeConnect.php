<?php

namespace DoctrineProxies\__CG__\App\Models;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class StripeConnect extends \App\Models\StripeConnect implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Proxy\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array<string, null> properties to be lazy loaded, indexed by property name
     */
    public static $lazyPropertiesNames = array (
);

    /**
     * @var array<string, mixed> default values of properties to be lazy loaded, with keys being the property names
     *
     * @see \Doctrine\Common\Proxy\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array (
);



    public function __construct(?\Closure $initializer = null, ?\Closure $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }

    /**
     * {@inheritDoc}
     * @param string $name
     */
    public function __get($name)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__get', [$name]);
        return parent::__get($name);
    }

    /**
     * {@inheritDoc}
     * @param string $name
     * @param mixed  $value
     */
    public function __set($name, $value)
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__set', [$name, $value]);

        return parent::__set($name, $value);
    }



    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'id', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'uid', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'token_type', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'stripe_publishable_key', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'scope', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'livemode', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'stripe_user_id', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'refresh_token', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'access_token', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'display_name', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'isDeleted', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'organizationId', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'organization'];
        }

        return ['__isInitialized__', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'id', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'uid', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'token_type', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'stripe_publishable_key', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'scope', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'livemode', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'stripe_user_id', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'refresh_token', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'access_token', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'display_name', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'isDeleted', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'organizationId', '' . "\0" . 'App\\Models\\StripeConnect' . "\0" . 'organization'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (StripeConnect $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy::$lazyPropertiesDefaults as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @deprecated no longer in use - generated code now relies on internal components rather than generated public API
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getArrayCopy()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getArrayCopy', []);

        return parent::getArrayCopy();
    }

    /**
     * {@inheritDoc}
     */
    public function getId(): int
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUid(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUid', []);

        return parent::getUid();
    }

    /**
     * {@inheritDoc}
     */
    public function getTokenType(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTokenType', []);

        return parent::getTokenType();
    }

    /**
     * {@inheritDoc}
     */
    public function getStripePublishableKey(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStripePublishableKey', []);

        return parent::getStripePublishableKey();
    }

    /**
     * {@inheritDoc}
     */
    public function getScope(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getScope', []);

        return parent::getScope();
    }

    /**
     * {@inheritDoc}
     */
    public function isLivemode(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isLivemode', []);

        return parent::isLivemode();
    }

    /**
     * {@inheritDoc}
     */
    public function getStripeUserId(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStripeUserId', []);

        return parent::getStripeUserId();
    }

    /**
     * {@inheritDoc}
     */
    public function getRefreshToken(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRefreshToken', []);

        return parent::getRefreshToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessToken(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessToken', []);

        return parent::getAccessToken();
    }

    /**
     * {@inheritDoc}
     */
    public function getDisplayName(): string
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDisplayName', []);

        return parent::getDisplayName();
    }

    /**
     * {@inheritDoc}
     */
    public function isDeleted(): bool
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isDeleted', []);

        return parent::isDeleted();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganizationId(): \Ramsey\Uuid\UuidInterface
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganizationId', []);

        return parent::getOrganizationId();
    }

    /**
     * {@inheritDoc}
     */
    public function getOrganization(): \App\Models\Organization
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrganization', []);

        return parent::getOrganization();
    }

}
